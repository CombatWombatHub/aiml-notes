# GitHub Actions Sphinx Guide: https://www.sphinx-doc.org/en/master/tutorial/deploying.html#id5

# this is the name of the workflow, which can hold multiple steps
name: "Sphinx -> GitHub Pages"

# run the actions in this yaml whenever I push to the repo from the main branch
on: 
  push:
    branches: [main]

# set up the jobs for this action. Each job here seems similar to one GitLab CI/CD job
# each job runs in its own environment and file structure
# i.e. each step is like one line of a bash script (or you can "uses:" to reuse an action of multiple steps)
jobs:
  # I'm using one job for all of the Sphinx stuff, so it all runs in the same environment
  build-sphinx-docs:
    #env: # can set environment variables for all steps of the job here (or can set them per step)
    #  # use the following two variables to make uv install packages into system env instead of venv
    #  UV_SYSTEM_PYTHON: 1 # determine correct UV_PROJECT_ENVIRONMENT value with: python -c "import sysconfig; print(sysconfig.get_config_var('prefix'))"
    #  UV_PROJECT_ENVIRONMENT: /opt/hostedtoolcache/Python/3.13.5/x64 # defaults to "/usr/local"
    # specify the image to run the job on
    runs-on: ubuntu-latest
    # give the job permissions for what it can do with the repository (I need it to write contents to the gh-pages branch)
    permissions:
      contents: write
    # specify the name and action for each step of the job
    steps:
    # check out my repo
    - name: Check Out Repo
      uses: actions/checkout@v4
      with:
        persist-credentials: false
    # install the Python version specified in the UV .python-version file
    - name: "Set up Python"
      uses: actions/setup-python@v5
      with:
        python-version-file: ".python-version" # could use pyproject.toml instead
    # install UV https://docs.astral.sh/uv/guides/integration/github/#using-uv-in-github-actions
    - name: Install UV
      uses: astral-sh/setup-uv@v6
      with:
        version: "0.8.2" # it's best practice to specify a particular version
    # have UV install the required Python packages (Writes to venv without UV_SYSTEM_PYTHON, UV_PROJECT_ENVIRONMENT)
    - name: Sync UV Python Packages
      run: uv sync --locked --group docs
    # install pandoc to make docs from Jupyter notebooks https://github.com/pandoc/pandoc-action-example
    - name: Install Pandoc
      uses: pandoc/actions/setup@v1
      with:
        version: 2.19
    # have UV build Sphinx HTML docs https://www.sphinx-doc.org/en/master/tutorial/deploying.html#id5
    - name: Build HTML Docs
      run: uv run sphinx-build -b html docs/source docs/build/html
    # upload the HTML artifacts for the deployment step to use
    - name: Upload HTML Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: html-docs
        path: docs/build/html/
    # deploy HTML artifacts to GitHub Pages from "gh-pages" branch https://github.com/marketplace/actions/sphinx-to-github-pages
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      if: github.ref == 'refs/heads/main'
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: docs/build/html